وعليك السلام ورحمة الله وبركاته
بداية مرحبا بك أخي 
ثم 
بالنسبة لسؤالك عن أي لغة برمجة تحتاج لتبدأ بها 
فيمكنك أن تبدأ بأي لغة تشاء خصوصا وأن معظم اللغات الحالية تتبع 
syntax  لغة السي
كما وتدعم البرمجة الكائنية 

ولاكن سأسرد لك أهم أربع خمس لغا ت ولك حرية الإختيار 
طبعا انا أتكلم عن لغات تعلمك البرمجة ومفاهيمها البسيطة والمعقدة
ولاكن يمكنك التوجه للغات الويب أيضا 

الأولى لغة السي : وهي ام اللغات ولا يجب عليك البدأ بها مطلقا خصوصا في زمن البرمجة
الكائنية هي نعم أقوى لغة وأستخدمها كثيرا في المعالجات السريعة للمشاريع الرسومية
ولاكن لا تبدأ بها حتى لا تصاب بعقدة من البرمجة نظرا لأنك مضطر لان تقوم بعمل كل شيء بنفسك بها
وبعض التعقيدات الأخرى

ثانيا لغة السي بلس بلس 
وهي التطوير للغة السي وتحوي البرمجة الكائنية وبعض الميزات الأخرى
وهي من أفضل الخيارات للبدأ بها ولاكنها ستحتاج منك مجهود كبير إذا كنت في البداية
وصبر لفهم مفاهيم البرمجة الكائنية وستكون مؤهلة لك لتتعلم لغة السي

وكلتا اللغتين c/c++
تستخدمان جنبا الى جنب في تطوير أنظمة التشغيل

ثالثا لغة بايثون : وهي من اللغات المنصوح بها بشدة للمبتدئين
حيث تدعم هذه اللغة جميع الأنماط البرمجة بما في ذلك أنماط الذكاء الصناعي والتعلم الذاتي
وتكون سهولتها في انها بعيدة كل البعد عن التعقيد المفروض على معظم لغات البرمجة
كما وتوفر مكتبات لعمل كل شيء تقريبا وذلك يرجع
لكونها تستخدم مكتبات لغة السي استخداما مباشرا 
لذلك يمكنك البدأ بها ولاكـــــــــــــن
بعد تعودك عليها لابد ان تتوجه للغة السي بلس أو جافا أو سي شارب 
رغم تفضيل للتوجه للسي بلس لتكون على دراية بمعنى التقييد التي تضعه لغات أخرى كجافا على المبرمجين
حيث في السي بلس انت حر في كل شيء ولست مقيدا

رابعا لغة جافا وهي من أقوى اللغات في العالم كونها أضافت مفاهيم جديدة للبرمجة
فإذا تغاضينا عن التقييد الموجود في جافا في بعض الأمور فإنها أقوى لغة تطبق
نظريات البرمجة الحديثة بحذافيرها وهي أكبر لغة لها مكتبات في العالم وأفضل توثيق للمكتبات في العالم
أيضا 

كما يمكنك الإطلاع عل لغات مايكروسوفت العاملة تحت بيئة الدوت نت 

الأن نأتي للسؤال الثاني
اسمح لي بالتفصيل في هذا الأمر حتى تستوعب تدريجيا حقيقة لغات البرمجة وماهيتها 

في الماضي كانت تستخدم البطاقات المثقبة في البرمجة وذلك بعد مرحلة التروس
ثم تلتها استخدام الصمامات المفرغة 
تلاها مباشرة الترانزوستر 
في جميع تلك المراحل كان يتم التعامل رياضيا مع الحاسوب وفقا للجبر البولوني
مما يعني ان أي قيمة لابد ان تمثل كسلسلة من الصفر والواحد

بعد اكتشاف تصميم الترانزوستر تم إنشاء رقاقات صغيرة تقوم بتوجيه عدة سلاسل من الأصفار والواحدات
دفعة واحدة بحيث توفر وقت في تنفيذ العمليات
ثم بعد مدة بدأ مصطلح برمجة الرقاقات المعدنية فأصبحت
تلك الأوامر تنفذ على رقاقة مغناطيسية ثم يقرأها الحاسوب 
وبالتالي وفرنا الوقت كثيرا
تلك الأوامر التي تحتويها الرقاقات هي ما تعرف الان بلغة التجميع 
وبعض الأوامر 
mov eax,3
الامر هو mov
المهم أنتهى عهد الرقاقات المطلقة للأوامر وبدأ عهد الكتابة على 
وحدة التخزين المعدنية وهنا اقترح العلماء تبسيط تلك الأوامر وفق منطق معين
مما يعني اننا سننشئ لغة أخر تطلق كل كلمة منها عدة أوامر من لغة الأسمبلي
وهنا بدأ عهد لغات البرمجة القابلة للفهم من قبل غير العلماء
وأنشأت اللغات على الترتيب التالي 
1968 – Logo
1969 – B (forerunner to C)
1970 – Pascal
1970 – Forth
1972 – C                                                    
1972 – Smalltalk
1972 – Prolog
1973 – ML
1975 – Scheme
1978 – SQL (a query language, later extended)



1980 – C++ (as C with classes, renamed in 1983)
1983 – Ada
1984 – Common Lisp
1984 – MATLAB
1985 – Eiffel
1986 – Objective-C                                                    
1986 – Erlang
1987 – Perl
1988 – Tcl
1988 – Wolfram Language (as part of Mathematica, only got a separate name in June 2013)
1989 – FL (Backus)   


1990 – Haskell
1991 – Python
1991 – Visual Basic
1993 – Ruby
1993 – Lua
1993 – R
1994 – CLOS (part of ANSI Common Lisp)
1995 – Ada 95                                                    
1995 – Java
1995 – Delphi (Object Pascal)
1995 – JavaScript
1995 – PHP
1997 – Rebol
1999 – D


2000 – ActionScript
2001 – C#
2003 – Apache Groovy                                               
2003 – Scala
2005 – F#
2006 – Windows PowerShell
2007 – Clojure
2009 – Go
2010 – Rust
2011 – Dart
2012 – Julia
2014 – Swift


كما ترى فالطفرة الكبرى قد حدثت في عهد لغة السي 
--للعلم بعض هذه اللغات صممت لأغراض مختلفة وبنيت بلغة السي--
المهم في عهد لغة السي بدت الحاجة الى تبسيطات أخرى للمجالات المختلفة التي ستستخدم فيها لغة البرمجة
وتم اعتبار لغة السي هي القاعدة الأساسية لجميع لغات البرمجة 

والان وجدت مجالات كثيرة سيتم فيها استخدام لغات البرمجة
وبالتالي فنحن نحتاج لمعمل مكتبات أي مجموعة من الأوامر تستدعى بأمر واحد فقط
أو بعدة أوامر بسيطة لتقوم بوظائف معقدة
تلك المكتبات ستؤدي لنا تلك الوظائف
ولاكن لحظة:هناك مجالات تعتبر فروع مستقلة بذاتها في العلم فهل 
سنضر في كل مرة لاستخدام الطريقة النحوية الصارمة للسي 
بالتأكيد لا 
وهنا تم تقسيم المكتبات الى نوعين 
النوع الأول : المكتبات التي ستدعم فروع ضخمة من العلوم مستقلة بذاتها يمكن تطويرها ذاتيا 
وهذا النوع من المكتبات اصطلح على تسميته بلغات البرمجة عالية المستوى ومنها لغات الاسكربت ك بايثون

النوع الثاني وهي المكتبات التي ستستخدم كإضافة لفرع معين من العلم والتي لن 
تنشء فرع مستقل بذاته وهي ما اصطلح على تسميته بالمكتبات البرمجية
ويمكن بنائها بإحدى الطريقتين 
الأولى ان تقوم ببنائها باللغة الموجودة في النظام العلمي الذي تعمل عليها 
مثل تطوير جافا بلغة جافا

الثاني ان تطورها باللغة الأم لها واللغة الأم لجميع اللغات هي لغة السي
وذلك كتطوير مكتبة hook الخاصة بلغة السي لتعمل مع بايثون

وبالتالي فقد نتج عندنا عدة لغات برمجة كل لغة خاصة بمجال معين 
وقابلة للتطوير بنفسها أو بلغتها الأم

فمن المجالات التي أنشأت لها لغات خاصة بها 
مجال الويب ومن لغاته
html/css/javascript/php.....
ولاكن لحظة : قلنا ان تلك اللغات مصمة بلغة السي لأنها اللغة الأم
هل هذا يعني أنني استطيع إنشاء صفحة ويب بلغة السي 
بالتأكيد إذا استطاع عقل استيعاب الكم الهائل من الأكواد فلا مشكلة فهوا أمر ممكن 
لان لغات الويب تحول لتعليمات السي رغم محموليتها 
--- تذكر نقطة ان جميع المكتبات لها اصل واحد سنحتاجها---

ومن المجالات التي أنشأت لها مكتبات هي مجال الشبكات  NetWorking
ولاكن لم تنشأ لها لغات برمجة واسعة النطاق فلا تسمع عن لغة 
برمجة للتواصل مع كارت المودم والتنصت على المنافذ ومراقة اتصالا udp tcp
لن تجد هذا ولاكنها مكتبات مصمة لعمل تلك الوظائف يمكن إستخدامها من أي لغة برمجة مالم يمنع 
منطق اللغة عمل ذلك

إذا ماذا يعني كل هذا 

هذا يعني أن لغات البرمجة الموجودة حاليا والتي تعلو لغة السي ما هي 
قواعد منطقية ونحوية ومسهلات للعمل 
إلا انه لايمكن لأي لغة من تلك اللغات ان تقوم بوظيفة لايمكن أدائها بلغة السي 

ويعني أيضا ان جميع لغات البرمجة يمكنها ان تقوم بنفس العمليات واستخدام نفس
المكتبات ولاكن الفرق سيكون في صرعة ترجمة الأكواد وفي توافر تلك المكتبات
أي ان مصممي تلك المكتبات يحتاجون لعمل بيندج لها للغات مختلفة
مثل مكتبة OpenGL من شركة كورنس
الخاصة بالرسم على الشاشة 

وهذا أيضا يعني أنه عندما نقول انك تعلمت لغة الجافا مثلا 
فأنت تعلمت طريقة كتابة لغة جافا وحدوها والقواعد المنطو بك اتباعها 

ولاكن عندما نسأل هل يمكن ان تتواصل مع قواعد البيانات لاننا نحتاجها في مشروع معين
سنقول نعم فلغات قواعد البيانات مصممة بلغة السي 
وجافا صممت بالسي بلس التي صممت وطورت بالسي
إذا فالتواصل مع قواعد البيانات سيتم عن طريق بناء مكتبة السي الخاصة بذلك ودمجه في ال jvm 
الخاص بجافا 
وذلك يرجع لكون جافا لاتسمح بالتواصل مع نظام التشغيل مباشرة خارج إطارها

المهم الفكرة الان واضحه كل لغات البرمجة يمكن ان تقوم بنفس الشيء
الفرق في اختصار الكود وسرعة التنفيذ وإدارة الذاكرة 

الان ثمة موضو ع ءاخر هام جداا 
وهو التواصل مع الأجهزة ككارت اللان والموديم وكارت الشاشة وما الى ذلك
في هذا الموضوع ثمة إشكالة معقدة جداا 
وهي ان هذه الاجهزة يشرف عليها نظام التشغيل ولا يسمح لأي برنامج في طبقة 
أعلى من نظام التشغيل التواصل مع هذه الأجهزة وإنما إما ان يكون في طبقة النظام أو في طبقة النواة وهي قبل نظام التشغيل
يمكنك البحث على الانترنت عن هذه الطبقات ستجد تفصيل أكثر
-إذا كيف سيتم هذا التواصل 
يوجد طريقتين 
الأولى أن توفر لنا الشركات المصممة لأنظمة التشغيل مكتبات تستطيع لغات البرمجة التواصل معها
بحيث تقف تلك المكتبات وسيطا بيننا وبين تلك الأجهزة وهذه المكتبات هي ال API الخاصة بأنظمة التشغيل

الطريقة الثانية أن نقوم بكسر حاجز نظام التشغيل وذلك عن طريق التواصل مباشرة مع المعالج وهو ما يعني 
اننا سنكون مسؤلين عن أي خطأ يحدث بما في ذلك التلف اللذي قد يصيب بعض القطع المادية
وهذه العملية تتم بلغة الأسمبلي كاملة
أو دمجها في لغة السي عن طريق الموجه asm()
واستخدام لغات البرمجة الكائنية سيتسبب بثقل كبير في الجهاز لذا فهوا مرفوض تماما
وللعلم كونك استخدمت لغة التجميع فأنت مضطر ليس فقط لبناء الكود  مرة أخرى إذا كنت تدمج الاسمبلي
في السي
بل أنت مضطر لتغيير شيفرة التجميع كاملة لكون لغة التجميع تختلف من معالج لأخر


وهذا السبب هو الذي جع مكتبات الشبكات مكتبات وليست لغات برمجة
فالأجهزة تتغير باستمرار وليست مجرد تعليمات يتم تطويرها كلغات الويب
ولاكنها أجهزة بالكامل تغير وتتعامل مع نظام التشغيل لذلك محاولة عمل لغة برمجة خاصة 
بذلك هو مشروع فاشل فشلا كليا 
-----
عذرا على الإطالة ولاكني أردت ان أجعل الرد مرجعا لمن يريد الرجوع اليه في أي وقت
----

الموضوع الأخير الذي سأتكلم عنه وهو موضوع خاص بالمبرمجين المتمرسين 
وهوا سؤال يرد كثيرا ويقول : أين الكود المصدري للغتي السي والسي بلس بلس

في الواقع هذا السؤال طرح بسبب اللبس الذي حدث في مفهوم لغات البرمجة الأساسية 
والمكتبات التي تحولت الى لغات برمجة 

فإن قلت لك أين الكود المصدري الخاص باللغة العربية 
فمباشرة ستقول لي لا يوجد كود مصدري وإنما هي قواعد وتوصيفات إذا سرت عليها سيكون كلامك عربيا
وهذا بيت القصيد فلغة البرمجة أساسا هي مجرد توصيفات منطقية 
للحاسوب ليقوم بوظائف معين 
فتقول مثلا للحاسوب إذا وجدي 
التالي 
void Z;
فنفذ التالي
.DSEG 
var1:    .BYTE 1            ; reserve 1 byte to var1 
table:   .BYTE tab_size     ; reserve tab_size bytes 

.CSEG 
         ldi r30,low(var1)  ; Load Z register low 
         ldi r31,high(var1) ; Load Z register high 
         ld r1,Z            ; Load VAR1 into register 1 

لا تشغل نفسك بالكود
-
مما يعني انها مجرد توصيفات يشرف عليها المترجم وملححقاته compiler&linker....

وكذا لغة السي بلس بلس وما شابهها لهذا تجد انه من الصعب نسبيا تحجيم 
لغة كلفة السي بلس بقواعد منطقي معقدة بينما من السهل عمل ذلك في الجافا بفضل ال jvm
كالواجهات والمزامنة وما الى ذلك

لاكن بالنسبة للغات التي لها كود مصدري فقطعا هي تستخدم virtual env
شاملة لغات الاسكربت ولغات الويب وكذا لغة جافا طبعا

أردت فقط ان انوه لهذه النقطة لكونها محل سؤال  دائم للمبرمجين الجدد

------------------------
في النهاية الملخص:
1-جميع لغات البرمجة تقود لنفس الطريق
2-اللغات الأسهل هي لغات الاسكربت ك python  مع تمتعها بقوة عالية وتوافر مكتباتها
3-اكثر اللغات من حيث المكتبات ومواكبتها للانماط البرمجية الحديثة هي java
4-لغتيس سي وسي بلس معقدتان في استخدام المكتبات وغير عمليتين إذا أردت جني المال من البرمجة
5-معظم المكتبات الخاصة بالشبكات والويب وقواعد البيانات والواجهات الرسومية
متوافرة لجميع لغات البرمجة إلا أن الفرق يكمن فيما يوفره مطوروا اللغة من تطويرات جديدة 
لتلك المكتبات وأعلاهم على الإطلاق تميزا جافا

الباقي في المنشور التالي

-
في النهاية أود أن أقول أن تعلمك ل
للأسمبلي
: سيضيع وقتك غالبا ولن تجني منه قرشا واحدا إلا 
إذا كنت ستعمل في سرقة البرامج وتحليلها وستجد المحاكم في إنتظارك
إلا أنها ستفيدك في فهم ءالية عمل الحاسب على حقيقته وستعطيك قوة هائلة في الوصول لأي شيء تريده
في الحاسب
ولاكن ليس لها أي استخدام مع شركات البرمجة 

السي
:
ستفيدك في فهم المباديء الأولية لعمل الحاسب بأوامر بسيطة بعيدا عن التعقيدات الفلسفية
لأنماط البرمجة المستحدثة
ستستهلك وقت كبير جداا منك إن أردت تصميم برنامج بها 
كما أن ربط مكتابتها معقد 
فقد حدث معي من قبل أن قمت بتعديل مكتبة الرسوميات الخاصة بكورنس من 
شيفرتها المصدرية وقمت بإعادة بنائها لتعمل على جهازي وفقا نمط معين وهذا امر مرهق
ومزعج جداا وأنت في غنى عن الجوء ليء كهذا

السي بلس بلس:
مهمة جداا وتفتح لك الأفاق لأمور كثيررة
ولاكن إذا أردت ان تنشء بها تطبيقات معتبرة فأنت بحاجة لتستخدم Qt  من نوكيا
ورخصتها لن تسمح لك ببيع تطبيقاتك مالم تكن قد اشتريتها
: Qt توفر واجهة رسومية بدل ان تقوم انت ببناء محرك رسومي بنفسك
كما توفر بيئة كاملة للشبكات وما الى ذلك وتستخدمها شركة أدوبي في برامجها
ولاكن توجد كثير من التعقيدات في استخدام مكتباتها خارج برامجها
خاصة وان كيوتي لها لغة برمجة خاصة 
أنا شخصيا أرى كود السي بلس بلس الموجود داخل الكيوتي هو مجرد استخدام للقواعد النحوية للسي بلس
ولاكن كل شيء مختلف خاصة ال Macros العجيبة الخاصة بكيوتي

لغة بايثون:
هي أفضل لغة للعمل السريع والدقيق مع عدم التطرق لإدارة الذكرة
ففي لغة بايثون هناك مكتبات تقريبا لكل شيء كما يمكن استخدام مكتبات السي للوصول 
المباشر للذاكرة 
وهي لغة بسيطة في تركيبتها النحوية 
فقط كل ما ستحتاجه بعد تعلمك لطريقة العمل بلغة بايثون هما أمران
1-فكرة تنفذها دون ان تحمل هم إدارة الذاكرة ولا عمل كلاسات معقدة لتقوم بوظائف في نزرك بسيطة
2-مكتبات تقوم بذلك
على سبيل المثال كنت العب مع احد اصحابي فقمت بتصميم برنامج 
يمنعه من الوصول لبرنامج معين --برنامج مشاركة الواي فاي حتى لا يقوم بعمل بلوك لي-- هههه
حيث كنت اقوم بأخذ لقطة للشاشة كل مدة زمنية معينة وأقوم بتحليلها فإذا وجدت صورة البرنامج
أي انه يحاول الوصل اليه امنع المؤشر من الاقتراب من الزر الخاص بالبلوك حيث بمجرد محاول الضغط عليه
أعترض طريق تلك الأشارة وأمنع وصولها للمعالج 

طبعا برنامج كهذا بلغة السي او السي بلس ستكتب فيه مالا يقل عن الف سطر 
ولاكن في بايثون ذاك لم يتجاوز 30 سطر باستخدام بعض مكتبات تحليل الصور والتعامل مع الطرفيات 
وتحديدا لمن يريد الاطلاع مكتبتي pyHook,pyautogui

كما ويمكنك مراقبة اللوحة واستخدام مكتبات ال smtp لإرسال رسالة لإيميلك بالبيانات الجديدة
وأمور كثيرة فقط جد فكرة تنفذها ثم توجه لمستودعات بايثون او اذه ل stackoverflow 
وأسأل عن مكتبة تصوم بالوظيفة الفلانية لتبدأ بتطويعها لما تريد
فنحن في عالم السرعة

لغة Java
:
طبعا هذه اللغة تستطيع ان تقول انها في مجال العمل في الشركات هي الأهم على الأطلاق وذلك يرجع 
لكونها تملك مكتبات لا يستوعبها العقل أساسا كما تضاف عليها مكتبات الأباتشي 

هذه اللغة إذا تعلمتها واتقنت مفاهيمها فأنت تملك أقوى لغة لتجني منها المال أو تنفذ بها 
مشاريعك الكبيرة ويكفي ان تعلم وبالتأكيد تعلم ان نظام اندرويد مصمم بها
وترى الطفرة الذي أحدثها هذا النظام في العالم

كما ان تعلم هذه اللغة يؤهلك لتصميم تطبيقات الاندرويد
للعلم فالمشروع السابق الخاص ببايثون الذي ذكرته يمكن 
تصميمه بجافا باستخدام openCv(Bending)&Hook(Lib)
فهي لغة تمكنك تقريبا من كل شيء مع سهولة وضمان لإمكانية تصحيح أخطاء البرنامج
مهما بلغ تعقيده فجافا بنيت أساسا على مباديء لن تسمح بتعارض في المنطق تحت أي ظرف
فالخطأ دائما سيكون خطأ في تنفيذ تعليمة وليس في المنطق
وأقصد بالأخطاء المنطقية مثل الأخطاء الناتجة عن الوراثة المتعددة من كلاسات كاملة وليس واجهات
وهو ما قامت جافا بمنعه نهائيا فلا يمكنك ان ترث وراثة متعددة في جافا عبر الفئات الكاملة

ولاكن لغة ك سي بلس تدعم كل شيء 
توجد بها هذه الميزة أو الإشكالية فهي ميزة لمن يحتاجها ويفهما ويدرك مخاطرها
وكارثة على من يستخدمها وهو غير ملم بأبعادها المنطقية وطريقة تنفيذ المعالج لها 
وكمثال يمكنك الاطلاع على مجال الاسماء std الخاص
بمكتبات ال stream:
istream
ostream
iostream
fstream
وما الى ذلك من المكتبات القياسية للغة السي بلس فقم بالبحث عن مخططه لتدرك مدى
التعقيد الناجم عن هذه الطريقة
فالخلاصة جافا لغة صممت لتجعل نسبة الخطأ أقل مايمكن
والقول عن انها بطيئة فهذا أمر مغلوط حيث ان  البطء ناتج عن فشل من المبرمج في تنظيم
عملياته واستخدامها لكلاسات اللغة الكبيرة في غير موضعها
وطبعا هي ليست بسرعة السي بلس (رغم ثقل السي الشديد في بعض الواجهات الرسومية بسبب مشاكل ادارة الذاكرة)


لغات مايكروسوفت 
واخص 
C#
:
فإذا كنت من العاملين على نظام ويندوز وجميع مشاريعك عليه
فهذه اللغة هي خيارك الأول فهي قادرة على 
استخدام لغة السي والسي بلس ومكتباتهما كم يمكن
تضمينها بالسي الحاوية للاسمبلي
كما وبها مفاهيم برمجية حديثة 
وتوفر لك كل شيء لتصمم تطبيقاتك وبرامجك على انظمة مايكروسوفت عامة
كما وتوفر لك قوة كبيرة في تصيميم الألعاب حيث أنها 
اللغة الأولى في محرك الألعاب unity

واللغة الثانية في محرك الألعاب Uneral
حيث تكمن قوة هذه اللغة في إمكانية دمجهابلغة السي بلس لتكوين مشاريع خارقة
حيث أني املك الكود المصدري لمحرك uneral بعد إطلاقه في 2014 النسخة الرابعة
فالكود بالكامل هو دمج بين اللغتين الكلاس العام بالسي شارب
وتطبيق الدوال داخل لغة السي بلس
وبالتالي تسمح لك بقوة
خارقة والان مايكروسوفت توفر بيئة الدوت نيت لأنظمة التشغيل الأخرى 
مما سيشكل إزدهارا قويا لهذه اللغة وهي قطعا فائقة السرعة

كما وتكمن قوتها الأخر في مكتباتها حيث ان مكتباتها كثيرة ومصممة بعناية بدون تكرار 
وسهولة شديدة في استخدام المكتبات
حيث انه مصممة من قبل مايكروسوفت 

كما وتسمح لك بتصميم صفحات الويب مع تقنية asp.net
وهي من اشهر التقنيات في العالم وموقع w3School مصمم بها إن أردت الإطلاع عليه

وللعلم فهي اللغة الأولى المطلوبة في سوق العمل المصري 

أهـ.
